name: Python tests üêç

on: 
  pull_request:
    branches: ["main", "release/*"]
    types: ["ready_for_review", "review_requested"]
  push: 
    branches: ["main", "release/*"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')) }}

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    # ----------------------------------------------
    # check-out repo and set-up python
  # ----------------------------------------------
    - name: Check out the repo
      uses: actions/checkout@v3
    - name: Move to pkg grid-world-plus directory
      run: cd grid-world-plus
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.13
    - name: Run python "hello, world" and move to pkg grid-world-plus directory.
      run: python --version && python -c "print('hello')"
    # ----------------------------------------------
    # Install & configure poetry
    # ----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    #----------------------------------------------
    # load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      working-directory: "./grid-world-plus"
      run: |
        poetry install --no-interaction --no-root
        poetry run poe force-cuda11
    - name: Run Python tests
      working-directory: "./grid-world-plus"
      run: |
        poetry run pytest -s -p no:warnings
